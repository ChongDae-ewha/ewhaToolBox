From f7d4a2594ccf805f33c31af1edec9500f2797468 Mon Sep 17 00:00:00 2001
From: Saeyeon Hong <sean@Saeyeons-MacBook-Air.local>
Date: Sat, 16 Mar 2024 17:32:10 +0900
Subject: [PATCH] =?UTF-8?q?dir:=20firebase=20=EC=99=84?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 code/.gitignore                               |   1 +
 code/EwhaToolBox/__init__.py                  |  18 +++++
 .../__pycache__/__init__.cpython-310.pyc      | Bin 0 -> 551 bytes
 .../__pycache__/app.cpython-37.pyc            | Bin 374 -> 0 bytes
 .../__pycache__/db_handler.cpython-310.pyc    | Bin 0 -> 1660 bytes
 code/EwhaToolBox/auth/client_secrets.json     |   1 +
 code/EwhaToolBox/auth/firebaseAuth.json       |  10 +++
 code/EwhaToolBox/auth/token.json              |   1 +
 code/EwhaToolBox/db_handler.py                |  42 ++++++++++
 code/EwhaToolBox/quickstart.py                |  74 ++++++++++++++++++
 .../EwhaToolBox/templates/product-detail.html |   0
 code/EwhaToolBox/test.py                      |  15 ++++
 .../__pycache__/main_views.cpython-310.pyc    | Bin 0 -> 950 bytes
 .../{app.py => views/main_views.py}           |  20 ++---
 code/requirements.txt                         |   5 ++
 15 files changed, 175 insertions(+), 12 deletions(-)
 create mode 100644 code/.gitignore
 create mode 100644 code/EwhaToolBox/__init__.py
 create mode 100644 code/EwhaToolBox/__pycache__/__init__.cpython-310.pyc
 delete mode 100644 code/EwhaToolBox/__pycache__/app.cpython-37.pyc
 create mode 100644 code/EwhaToolBox/__pycache__/db_handler.cpython-310.pyc
 create mode 100644 code/EwhaToolBox/auth/client_secrets.json
 create mode 100644 code/EwhaToolBox/auth/firebaseAuth.json
 create mode 100644 code/EwhaToolBox/auth/token.json
 create mode 100644 code/EwhaToolBox/db_handler.py
 create mode 100644 code/EwhaToolBox/quickstart.py
 create mode 100644 code/EwhaToolBox/templates/product-detail.html
 create mode 100644 code/EwhaToolBox/test.py
 create mode 100644 code/EwhaToolBox/views/__pycache__/main_views.cpython-310.pyc
 rename code/EwhaToolBox/{app.py => views/main_views.py} (51%)
 create mode 100644 code/requirements.txt

diff --git a/code/.gitignore b/code/.gitignore
new file mode 100644
index 0000000..b1da191
--- /dev/null
+++ b/code/.gitignore
@@ -0,0 +1 @@
+myenv3.10/
\ No newline at end of file
diff --git a/code/EwhaToolBox/__init__.py b/code/EwhaToolBox/__init__.py
new file mode 100644
index 0000000..d4581e2
--- /dev/null
+++ b/code/EwhaToolBox/__init__.py
@@ -0,0 +1,18 @@
+from flask import Flask
+
+def create_app():
+    app = Flask(__name__)
+
+    from.views import main_views
+    app.register_blueprint(main_views.bp)
+
+    return app
+
+from EwhaToolBox.db_handler import DBModule
+
+DB= DBModule()
+
+data = {"name": "Jollibee", "age": 30}
+
+# 데이터 쓰기
+DB.write_data(data)
\ No newline at end of file
diff --git a/code/EwhaToolBox/__pycache__/__init__.cpython-310.pyc b/code/EwhaToolBox/__pycache__/__init__.cpython-310.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..e34878387b196c40decae652ea74ef8734e457a7
GIT binary patch
literal 551
zcmYjPy-pl45VpPEJ+oOTQlzA!*#h<jA{1Q?ibx?vpmAgQ&I4@X{gJ)Lfpk>lF;ZO0
zypmh0djJ|L#w#J+NHd!GJoC+u-0kn@1m(x&3mj8Io@1~p2?k$K{V5tl47H@8l2T%r
zN&XPY5aTv!xa5=oe<Ct9smaXbFOwOhn+at9Vz&56%DpXekdlV<+-m=O5u<lu=)_)M
zQT-8`feiGCK4M41ENhZSWLc99U(;V{WLy(uOfI%KbfnB1UAOA4hLtZf7ukYPs?`lB
zCDRdiJfa^R+|+&mr{;DEy{p?Huz6pykm$Z2bN&;zhpDe;)s+Y5D-XJ@X5C`hKs)%V
zd02D?Dp=j>%dWH2?!Fp<vmHRGx~&JLPWp$CFC6Fr6w=2Hy+9*q!3xTm`+xzCFJ{y4
zompCt;#+5JJqOqx#wQkdTmpx?fs0av^g5nyTyU(FpLW`wn7O*ut+C)-fz^`Drhywh
lXqm5EjWa}lTyDq24-mxXX6%0&@9AT4K?EyA#&UL$yaAMxgxCN8

literal 0
HcmV?d00001

diff --git a/code/EwhaToolBox/__pycache__/app.cpython-37.pyc b/code/EwhaToolBox/__pycache__/app.cpython-37.pyc
deleted file mode 100644
index f4e9de157a6af5b65689517e8763f3f288df5798..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 374
zcmYLFJx{|h5cT<^ae*%U0a!awm=Qv#NEK5T2Baub6xF7sb>hfQhIWOO{{SOPe~?$i
zzz<;Q#JN?~XWjGj+4p?*u-7{xh@bACUgP{77ke-icNl(zq=*7TN=N~sriP|egJ!Rg
za?L-4VxOS65^n@E9nDl{LETXEd7=^}-(wYhB>nC$dXYW^F*1c;j5lyOiJ3hB#XW}S
zND8omj#tMI+8BHOWSvo8#Ko-xZO+tn_8iUf+S$3DG(OW8Q(H~5qOJ$^GKg6$7txg>
z5$Za~ftSTgwMwoA+kq|dne|Oy2C;Q>@oZpz>4VJkswj1y2ZokGINLUQXTn@t9eUZR
ZcvFx!rB$ubxA8?je)0)Oko1&G_y<`RQkDP!

diff --git a/code/EwhaToolBox/__pycache__/db_handler.cpython-310.pyc b/code/EwhaToolBox/__pycache__/db_handler.cpython-310.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..8d9dcf811272ecc81d0a4754acccdc290704f6e2
GIT binary patch
literal 1660
zcmb7EJ8v6D5Z=89d7?-?D8YdfJ5Y=?OhF>OVaPAIao9LPl4};Ho0W9J@$Pbagd{=+
z3`m7w*|32WiHiUd?8Y671jujMHdREr3euzqGIN)sXelbPhn<<7+1+nucIM(nqsDNg
z-~1`-CS$+RVtSyCt>RQSkN^W7GPmH|<qsGbU>-0q_YKzo{)n}#-*F%7`b4LPfs0j~
z>LC)zTn>y*fN{WF6HKs>TVO*4xeZltkXK*^YRIcF3w7iUG+++-49vp<@)|56VpBW!
z?tBqLKa@Vl%gaHYJ2>y+R9z$)dcV(KG#>Me9~*o8gg-XE##k);_D#+r=X0i(w>f9@
zeTy?QkF7o9gzqt7@3AfWxN^c!t^z|`qdWMt-MPQL>3tc;;hlJ=<Mp%6&U%o_HBZUg
zxM**wIBGfCiW3=Wi&okSV-K{G>=xVHxgZL%zzc(c6kd|J)%*e_F<LM4=q7EzTFcay
zlHt1M>$>8{(R#4)mZh^8)n5-fUn!ZYj*?!~xflEWo{Tcp>FxS4$c~)yFIP-E3~OT3
ziy)L~JK5Ea5af#xHf4;;qQ>jSwZH4u0v{}vIc}G`d`fURNT%ddvj4D<P>SC2Zth~s
zOz9!C5r8(6ZOD}csgvFg<BcGiqoY(N79Y$_&~lSc9+iXS5-O!b={yn2Ma#~C(gjj1
zBGFdl^`y3C&kMryuoV?-L_tLR(j_E=`3Y)axirG_u>Zzq_3<IJgU^%E6P(AZZKpvd
zMG~uQd4jn#!926RSH=|TW#RH7Tnc?Eoil_W!a!voOkkQ5n2FJ+T$h97%TSCQ#jWNi
zgA1=Wo9jVlnBoudnj)9W?*kU*{|!kA6&E3$4VekDU7z5c)n{qD07f-R^{GBag6+(X
zIp9yA_!UsIgRzgzpEtMJb*pm6>m{M=e}>yf&xhlmetvf_Tp52qJpFZeI()J+eswT<
z{cQB|$MFw`<EOujjt)mhZ`v&@t>OV~`<p?C^{!;5?IaDNtW_jZTh!Q>6bG4ZkdM?u
zO{2~S=L>{(bX&93tyJ4W=$a6{{P%})U5M}cURYSt240djiCiIal}P?XACYv8$R|Y3
z3MiMTDbu_YQBZW=VGeg@9JBoDc5cVUuFzg`Hdp-DP1?CxxOa;ROwj?lu4()Ofj?{E

literal 0
HcmV?d00001

diff --git a/code/EwhaToolBox/auth/client_secrets.json b/code/EwhaToolBox/auth/client_secrets.json
new file mode 100644
index 0000000..a920138
--- /dev/null
+++ b/code/EwhaToolBox/auth/client_secrets.json
@@ -0,0 +1 @@
+{"installed":{"client_id":"904831047115-q7qb2mh3fsa3rit1no2a3cav5r1vg45e.apps.googleusercontent.com","project_id":"test-4f2e1","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"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","redirect_uris":["http://localhost"]}}
\ No newline at end of file
diff --git a/code/EwhaToolBox/auth/firebaseAuth.json b/code/EwhaToolBox/auth/firebaseAuth.json
new file mode 100644
index 0000000..660fbb8
--- /dev/null
+++ b/code/EwhaToolBox/auth/firebaseAuth.json
@@ -0,0 +1,10 @@
+{
+    "apiKey": "AIzaSyBFUaaNfM7SwCcULPWcC19qrfpjEbdE49U",
+    "authDomain": "test-4f2e1.firebaseapp.com",
+    "databaseURL": "https://test-4f2e1-default-rtdb.firebaseio.com",
+    "projectId": "test-4f2e1",
+    "storageBucket": "test-4f2e1.appspot.com",
+    "messagingSenderId": "904831047115",
+    "appId": "1:904831047115:web:64a3857860ee7ec867124e",
+    "measurementId": "G-0DMK77JM9K"
+  }
\ No newline at end of file
diff --git a/code/EwhaToolBox/auth/token.json b/code/EwhaToolBox/auth/token.json
new file mode 100644
index 0000000..24a83e1
--- /dev/null
+++ b/code/EwhaToolBox/auth/token.json
@@ -0,0 +1 @@
+{"access_token": "ya29.a0Ad52N39pp6aqj44DU1IDE0ZUE0ved-4K9MFVL5fYYzMO9iQmzySZEHemZmogCbwdS9ZojLyO35nkqdsc_r997kyIW3-vuTvJfOdH78bjffdWERALAAt5X8WRF5bygPiwt6BVbqOUjf6FSf3Vsf5s0em6LmmzWagdcwtOaCgYKAQMSARMSFQHGX2MiIYkUX8Oa85DXyIbBefC2ng0171", "client_id": "904831047115-q7qb2mh3fsa3rit1no2a3cav5r1vg45e.apps.googleusercontent.com", "client_secret": "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", "refresh_token": "1//0el1HMj7NO_1UCgYIARAAGA4SNwF-L9IrQStiO-fRqzQeNlFgI2myG2xnVPD4izm3DGAJQEuLlJx4bixU8RCnTTMzf32fgLkdS6k", "token_expiry": "2024-03-16T08:59:32Z", "token_uri": "https://oauth2.googleapis.com/token", "user_agent": null, "revoke_uri": "https://accounts.google.com/o/oauth2/revoke", "id_token": null, "token_response": {"access_token": "ya29.a0Ad52N39pp6aqj44DU1IDE0ZUE0ved-4K9MFVL5fYYzMO9iQmzySZEHemZmogCbwdS9ZojLyO35nkqdsc_r997kyIW3-vuTvJfOdH78bjffdWERALAAt5X8WRF5bygPiwt6BVbqOUjf6FSf3Vsf5s0em6LmmzWagdcwtOaCgYKAQMSARMSFQHGX2MiIYkUX8Oa85DXyIbBefC2ng0171", "expires_in": 3599, "refresh_token": "1//0el1HMj7NO_1UCgYIARAAGA4SNwF-L9IrQStiO-fRqzQeNlFgI2myG2xnVPD4izm3DGAJQEuLlJx4bixU8RCnTTMzf32fgLkdS6k", "scope": "https://www.googleapis.com/auth/forms.body", "token_type": "Bearer"}, "scopes": ["https://www.googleapis.com/auth/forms.body"], "token_info_uri": "https://www.googleapis.com/oauth2/v3/tokeninfo", "invalid": false, "_class": "OAuth2Credentials", "_module": "oauth2client.client"}
\ No newline at end of file
diff --git a/code/EwhaToolBox/db_handler.py b/code/EwhaToolBox/db_handler.py
new file mode 100644
index 0000000..9bdf3fe
--- /dev/null
+++ b/code/EwhaToolBox/db_handler.py
@@ -0,0 +1,42 @@
+import pyrebase
+import json
+
+class DBModule:
+    def __init__(self):
+        with open("./EwhaToolBox/auth/firebaseAuth.json") as f:
+
+            config = json.load(f)
+
+        self.firebse = pyrebase.initialize_app(config)
+        self.db=self.firebse.database()
+
+
+    def login(self,id,pwd):
+        pass
+
+    def signin(self,id,pwd,name,email):
+        pass
+
+    def write_post(self,user,contents):
+        pass
+
+    def post_list(self):
+        pass
+
+    def post_detail(self,post_id):
+        pass
+
+    def get_user(self, user_id):
+        pass
+
+    #데이터 쓰기 체크 
+
+    def write_data(self, data):
+        # Firebase 데이터베이스에 데이터 쓰기
+        self.db.child("example").set(data)
+        print("데이터 쓰기가 완료되었습니다.")
+
+
+
+
+
diff --git a/code/EwhaToolBox/quickstart.py b/code/EwhaToolBox/quickstart.py
new file mode 100644
index 0000000..19ae85d
--- /dev/null
+++ b/code/EwhaToolBox/quickstart.py
@@ -0,0 +1,74 @@
+from apiclient import discovery
+from httplib2 import Http
+from oauth2client import client, file, tools
+
+SCOPES = "https://www.googleapis.com/auth/forms.body"
+DISCOVERY_DOC = "https://forms.googleapis.com/$discovery/rest?version=v1"
+
+store = file.Storage("./EwhaToolBox/auth/token.json")
+creds = None
+if not creds or creds.invalid:
+  flow = client.flow_from_clientsecrets("./EwhaToolBox/auth/client_secrets.json", SCOPES)
+  creds = tools.run_flow(flow, store)
+
+form_service = discovery.build(
+    "forms",
+    "v1",
+    http=creds.authorize(Http()),
+    discoveryServiceUrl=DISCOVERY_DOC,
+    static_discovery=False,
+)
+
+# Request body for creating a form
+NEW_FORM = {
+    "info": {
+        "title": "Quickstart form",
+    }
+}
+
+# Request body to add a multiple-choice question
+NEW_QUESTION = {
+    "requests": [
+        {
+            "createItem": {
+                "item": {
+                    "title": (
+                        "In what year did the United States land a mission on"
+                        " the moon?"
+                    ),
+                    "questionItem": {
+                        "question": {
+                            "required": True,
+                            "choiceQuestion": {
+                                "type": "RADIO",
+                                "options": [
+                                    {"value": "1965"},
+                                    {"value": "1967"},
+                                    {"value": "1969"},
+                                    {"value": "1971"},
+                                ],
+                                "shuffle": True,
+                            },
+                        }
+                    },
+                },
+                "location": {"index": 0},
+            }
+        }
+    ]
+}
+
+# Creates the initial form
+result = form_service.forms().create(body=NEW_FORM).execute()
+
+# Adds the question to the form
+question_setting = (
+    form_service.forms()
+    .batchUpdate(formId=result["formId"], body=NEW_QUESTION)
+    .execute()
+)
+
+# Prints the result to show the question has been added
+get_result = form_service.forms().get(formId=result["formId"]).execute()
+print(get_result)
+
diff --git a/code/EwhaToolBox/templates/product-detail.html b/code/EwhaToolBox/templates/product-detail.html
new file mode 100644
index 0000000..e69de29
diff --git a/code/EwhaToolBox/test.py b/code/EwhaToolBox/test.py
new file mode 100644
index 0000000..5e109ba
--- /dev/null
+++ b/code/EwhaToolBox/test.py
@@ -0,0 +1,15 @@
+import requests
+
+# POST할 URL
+url = "https://forms.gle/4zUivtFwZWXkRTU57"
+
+# POST할 데이터
+data = {
+    "entry.2010186661": "1969"  # 첫 번째 옵션인 "1969" 선택
+}
+
+# POST 요청 보내기
+response = requests.post(url, data=data)
+
+# 결과 출력
+print("Response Status:", response.status_code)
diff --git a/code/EwhaToolBox/views/__pycache__/main_views.cpython-310.pyc b/code/EwhaToolBox/views/__pycache__/main_views.cpython-310.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..b6026273a064969584ba37d63afea27105c6e3d2
GIT binary patch
literal 950
zcmZ`&%Wl*#6tx}aF*BK&f_RGs+ib`WAcV?8LV^LQWs^-5#&@PENgV8i=~U_p#IFC)
zF8L*IS+TCzbj7thsKWwBJ~{W;x<0wrk>l}@;HX~zh6jw0pElSYJ_gTl>hB1G2wIWs
z>P<81VwN#{v&yS^#%n+G>mUp2FbnG_i|Ro(paeqU!BBAFpL*E{MrX0$=TrnD{6@ag
zZ0wW>m4O&KWdftaSd2uxq+)!^#6(P;J{5G2Bs;&*3z;Q>@n2Pi{$#>KEt_(&Hlc#g
zJ?PF1cB>v*RW_Z86o^v6yfb01s(c}p;dN0qmo!bN8CtDXuqcn_HtY7F7(B;$!4cfa
zY-aqj5peW_s4<GyaQQa<ph4+WL(!x!<h-w;>2zAJ=TblltAk=+%4%00rA~OcC44Di
zg*(wx?&#xotzyh>J9B|eA)LAR*iU;r<G()D2=^xFam&}WLp8xw!)*r3)YQTagyYzy
zO?A0!`quFG@AmewGGPtfffV|m;{x38;k0GZZxA|iNY9v{=k(++XUOSB_mHy<$CjUX
z8}1|L8y+C{1;NIKGwc!i%S&NcyE42fYA`-vX)5El2eJVZ7D6b{I`Ncki{XV@YU3@T
zO9FKZ6?NOf9Se6Y+_P}s!ga@7Dez(}b9>xPT-3JUF^lQdvqRNG6p|goN@+a3)`r_l
zX8eV{amsc@*+MuI%KjzF)<%U0CdzZ`JkJgL*cxBSz5~}mS8tbj%Z#&i<>*N*MPI>F
Yd-JsYgos2mqL0{wMc$CwIq@d+59=}3@c;k-

literal 0
HcmV?d00001

diff --git a/code/EwhaToolBox/app.py b/code/EwhaToolBox/views/main_views.py
similarity index 51%
rename from code/EwhaToolBox/app.py
rename to code/EwhaToolBox/views/main_views.py
index 0329290..0d19bd2 100644
--- a/code/EwhaToolBox/app.py
+++ b/code/EwhaToolBox/views/main_views.py
@@ -2,19 +2,20 @@ import io
 import sys
 import json
 
-from flask import Flask, jsonify, request
+from flask import Flask, jsonify, request, Blueprint,redirect, url_for
 
-app = Flask(__name__)
+bp=Blueprint('main',__name__,url_prefix='/')
 
-@app.route("/")
-def home():
-    return "Hello World"
 
-@app.route("/user")
+@bp.route("/")
+def index():
+    return "index"
+
+@bp.route("/user")
 def user():
     return ""
 
-@app.route("/user/signup", methods=['POST'])
+@bp.route("/user/signup", methods=['POST'])
 def reg_user():
     user_id = request.args.get('user_id')
     pw = request.args.get('pw')
@@ -23,10 +24,5 @@ def reg_user():
     phone = request.args.get('phone')
     address = request.args.get('address')
 
-@app.route("/user/signin")
-def login():
-    return ""
 
 
-if __name__ == "main":
-    app.run(host = "0.0.0.0")
\ No newline at end of file
diff --git a/code/requirements.txt b/code/requirements.txt
new file mode 100644
index 0000000..ddce7e1
--- /dev/null
+++ b/code/requirements.txt
@@ -0,0 +1,5 @@
+python==3.10.13
+Flask==3.0.2
+Pyrebase4==4.7.1
+google-api-python-client google-auth-httplib2 google-auth-oauthlib
+urllib3
-- 
2.39.3 (Apple Git-145)

